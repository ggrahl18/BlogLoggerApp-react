{"version":3,"sources":["components/Blog.js","components/BlogAll.js","services/blogs.js","services/login.js","components/Notifications.js","components/LoginForm.js","components/Togglable.js","components/BlogForm.js","App.js","index.js"],"names":["Blog","title","author","url","votes","addVote","className","href","onClick","BlogAll","blogs","map","b","key","id","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","login","credentials","Notifications","message","type","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","BlogForm","createBlog","newBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","class","event","preventDefault","target","App","setBlogs","setUsername","setPassword","user","setUser","setMessage","useEffect","blogService","initialBlogs","catch","error","alert","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","blogObject","blogFormRef","current","returnedBlog","concat","messageWith","console","log","setTimeout","handleLogin","loginService","setItem","stringify","createRef","name","removeItem","location","reload","exception","blog","find","n","changedBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff319794.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({ title, author, url, votes, addVote }) => {\n  return (\n    <div className=\"Blog\">\n        <h4>{title}</h4>\n        <ul>\n          by: {author}\n        </ul>\n        <ul>\n        <a href={url}> {url}</a>\n        </ul>\n        <ul className=\"votes\">\n          {votes} votes\n        </ul>\n        <ul>\n        <button onClick={addVote}>vote</button>          \n        </ul>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport Blog from './Blog'\n\nconst BlogAll = ({ blogs, addVote }) => {\n  return (\n    <div>\n      {blogs.map((b) => \n        <Blog\n          key={b.id}\n          title={b.title}\n          author={b.author}\n          url={b.url}\n          votes={b.votes}\n          id={b.id}\n          addVote={() => addVote(b.id)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default BlogAll","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notifications = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react'\n\nconst LoginForm = ({\n   handleSubmit,\n   handleUsernameChange,\n   handlePasswordChange,\n   username,\n   password\n  }) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n      </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import React, {useState} from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n  const [newBlog, setNewBlog] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n\n  const handleChangeBlog = (event) => {\n    setNewBlog(event.target.value)\n  }\n\n  const handleChangeAuthor = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleChangeUrl = (event) => {\n    setNewUrl(event.target.value)\n  }\n  \n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newBlog,\n      author: newAuthor,\n      url: newUrl,\n      votes: 0,\n    })\n\n    setNewBlog('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new blogpost</h2>\n\n      <form class=\"container\" onSubmit={addBlog} >\n        <p>\n          title: <input value={newBlog} onChange={handleChangeBlog} />\n        </p>\n        <p>\n          author: <input value={newAuthor} onChange={handleChangeAuthor} />\n        </p>\n        <p>\n          address: <input value={newUrl} onChange={handleChangeUrl} />\n        </p>\n        <p>\n          <button type=\"submit\">add</button>\n        </p>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm","import React, { useState, useEffect } from 'react';\nimport BlogAll from './components/BlogAll'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notifications from './components/Notifications'\nimport LoginForm from './components/LoginForm' \nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\n\nconst App = (props) => {\n  const [blogs, setBlogs] = useState(props.blogs)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n      })\n      .catch(error => {\n        alert('There has been an error fetching your blogs.')\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n\n        messageWith('Blog added!')\n        console.log('Blog added!')\n        setTimeout(() => {\n          messageWith(null)\n        }, 5000)\n      })\n      .catch(error => {\n        messageWith('Error, your blog was not added! Check all fields.', 'error')\n        console.log('Error, your blog was not added! Check all fields.')\n        setTimeout(() => {\n          messageWith(null)\n        }, 5000)\n      })\n  }\n\n  const addVote = (id) => {\n    const blog = blogs.find((n) => n.id === id)\n    const changedBlog = { ...blog, votes: blog.votes + 1}\n\n    blogService\n      .update(id, changedBlog)\n        .then(returnedBlog => {\n          setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n        })\n        .catch(error => {\n          alert(`Voting error!`)\n          console.log('Voting error!')\n        })\n  }\n  \n  const messageWith = (message, type='success') => {\n    setMessage({ message, type })\n    setTimeout(() => {\n      setMessage(null)\n    }, 6000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n\n      messageWith('login successful!')\n      console.log('Login successful!')\n      setTimeout(() => {\n        messageWith(null)\n      }, 5000)\n    } \n    catch (exception) {\n      messageWith('Incorrect login!', 'error')\n      console.log('Incorrect login!')\n      setTimeout(() => {\n        messageWith(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const blogFormRef = React.createRef()\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem('loggedNoteappUser')\n      messageWith('You have been logged out!')\n      console.log('You have been logged out!')\n      window.location.reload(false);\n    }\n    catch (exception) {\n      messageWith('Logout failed!', 'error')\n      console.log('Logout failed!')\n      setTimeout(() => {\n        messageWith(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"mainBody\">\n      <h1>Blog Logger</h1>\n        <p>Enter new found blogs that peak your interest and let others vote on them!</p>\n        \n        <Notifications message={message} />\n        \n        {user === null ?\n          loginForm() :\n          <div>\n            <p>{user.name} logged in</p>\n            <button onClick={handleLogout}>log out</button>\n            {blogForm()}\n          </div>\n        }\n\n        <BlogAll\n          blogs={blogs}\n          addVote={addVote}\n          id={props.id}\n          votes={props.votes}\n        />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nconst blogs = [\n  {\n    id: 1,\n    author: 'Andrew Skurka',\n    title: 'Andrew Skurka: Hard-won insights from out there',\n    url: 'https://andrewskurka.com/',\n    votes: 7 \n  },\n  {\n    id: 2,\n    author: 'Alan Dixon',\n    title: 'ULTRALIGHT BACKPACKING & HIKING',\n    url: 'https://www.adventurealan.com/',\n    votes: 5 \n  },\n  {\n    id: 3,\n    author: 'Derek Hansen',\n    title: 'The Ultimate Hang',\n    url: 'https://theultimatehang.com/blog/',\n    votes: 3 \n  }\n]\n\nReactDOM.render(\n    <App blogs={blogs}/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}