{"version":3,"sources":["components/Blog.js","components/BlogAll.js","services/blogs.js","services/users.js","services/login.js","components/Notifications.js","components/LoginForm.js","components/Togglable.js","components/BlogForm.js","components/UserForm.js","components/LoginToggle.js","App.js","index.js"],"names":["Blog","title","author","url","votes","addVote","removeBlog","useState","moreBlogVisible","setMoreBlogVisible","hideWhenVisibile","display","showWhenVisible","style","className","id","onClick","href","BlogAll","blogs","Table","striped","sort","a","b","map","key","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","setToken","newToken","remove","delete","login","credentials","Notifications","message","type","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","BlogForm","createBlog","newBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","event","preventDefault","target","UserForm","createUser","newUsername","setNewUsername","newPassword","setNewPassword","newName","setNewName","confirmPassword","setConfirmPassword","console","log","window","alert","name","LoginToggle","userForm","user","loginForm","handleLogout","blogForm","App","setBlogs","setUsername","setPassword","setUser","setMessage","useEffect","blogService","initialBlogs","catch","error","loggedUserJSON","localStorage","getItem","JSON","parse","addUser","userObject","userFormRef","current","userService","returnedUser","messageWith","setTimeout","addBlog","blogObject","blogFormRef","returnedBlog","concat","handleLogin","loginService","setItem","stringify","createRef","clear","location","reload","exception","blog","find","n","changedBlog","deleteBlog","confirm","filter","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.023ef260.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ title, author, url, votes, addVote, removeBlog }) => {\n  const [moreBlogVisible, setMoreBlogVisible] = useState(false)\n\n  const hideWhenVisibile = { display: moreBlogVisible ? 'none' : '' }\n  const showWhenVisible = { display: moreBlogVisible ? '' : 'none' }\n\n  return (\n    <td>\n      <div style={hideWhenVisibile} className=\"BlogShow\">\n        {title} - {author}\n        <button id='showmore-button' onClick={() => setMoreBlogVisible(true)}>show more</button>\n        <button id='remove-button' className=\"remove\" onClick={removeBlog}>remove</button>\n      </div>\n\n      <div style={showWhenVisible} className=\"BlogHide\">\n        <ul>\n          {title}\n          <button id='showless-button' onClick={() => setMoreBlogVisible(false)}>show less</button>\n          <button id='remove-button' className=\"remove\" onClick={removeBlog}>remove</button>\n        </ul>\n        <ul>\n          by: {author}\n        </ul>\n        <ul>\n          <a href={url}> {url}</a>\n        </ul>\n        <ul className=\"vote-button\">\n          {votes} votes <button id='vote-button' onClick={addVote}>vote</button>\n        </ul>\n      </div>\n    </td>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport Blog from './Blog'\nimport { Table } from 'react-bootstrap'\n\nconst BlogAll = ({ blogs, addVote, removeBlog }) => {\n  return (\n    <div className=\"blogs\">\n      <Table striped>\n        <tbody>\n          {blogs.sort((a, b) => b.votes - a.votes).map((b) =>\n            <tr key={b.id}>\n              <Blog\n                key={b.id}\n                title={b.title}\n                author={b.author}\n                url={b.url}\n                votes={b.votes}\n                id={b.id}\n                addVote={() => addVote(b.id)}\n                removeBlog={() => removeBlog(b.id)}\n              />\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BlogAll","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken, remove }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notifications = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div className=\"loginForm\">\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id=\"user-name\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n\n        <div>\n          password\n          <input\n            id=\"pass-word\"\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n  const [newBlog, setNewBlog] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleChangeBlog = (event) => {\n    setNewBlog(event.target.value)\n  }\n\n  const handleChangeAuthor = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleChangeUrl = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newBlog,\n      author: newAuthor,\n      url: newUrl,\n      votes: 0,\n    })\n\n    setNewBlog('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new blogpost</h2>\n\n      <form className=\"container\" onSubmit={addBlog} >\n        <p>\n          title: <input id='title' value={newBlog} onChange={handleChangeBlog} />\n        </p>\n        <p>\n          author: <input id='author' value={newAuthor} onChange={handleChangeAuthor} />\n        </p>\n        <p>\n          address: <input id='url' value={newUrl} onChange={handleChangeUrl} />\n        </p>\n        <p>\n          <button id='add-button' type=\"submit\">add</button>\n        </p>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm","import React, { useState } from 'react'\n\nconst UserForm = ({ createUser }) => {\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newName, setNewName] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsername = (event) => {\n    setNewUsername(event.target.value)\n  }\n\n  const handleNewPassword = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const handleConfirmation = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n\n  const addUser = (event) => {\n    // also add a check to make sure no one is logged in\n    // if (!(user === null)) {\n    //   console.log('please log out first')\n    //   window.alert('You must be logged out')\n    //   event.preventDefault()\n    // }\n\n    if (!(confirmPassword === newPassword)) {\n      console.log('Passwords do not match')\n      window.alert('Passwords do not match')\n      event.preventDefault()\n      setConfirmPassword('')\n    } else{\n      event.preventDefault()\n      createUser({\n        blogs: [],\n        name: newName,\n        username: newUsername,\n        password: newPassword\n      })\n\n      setNewName('')\n      setNewUsername('')\n      setNewPassword('')\n      setConfirmPassword('')\n    }\n  }\n\n  return (\n    <div>\n      <h2>Create a new user</h2>\n\n      <form className=\"userForm\" onSubmit={addUser}>\n        <div>\n          name\n          <input\n            id=\"new-name\"\n            value={newName}\n            onChange={handleNewName}\n          />\n        </div>\n\n        <div>\n          username\n          <input\n            id=\"new-username\"\n            value={newUsername}\n            onChange={handleNewUsername}\n          />\n        </div>\n\n        <div>\n          password\n          <input\n            id=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            onChange={handleNewPassword}\n          />\n        </div>\n\n        <div>\n          confirm password\n          <input\n            id=\"confirm-password\"\n            type=\"password\"\n            value={confirmPassword}\n            onChange={handleConfirmation}\n          />\n        </div>\n        <button id=\"create-button\" type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default UserForm","import React from 'react'\n\nconst LoginToggle = ({ userForm, user, loginForm, handleLogout, blogForm }) => {\n  return(\n    <div>\n      {user === null ?\n        loginForm() :\n        <div>\n          <p className='userName'>{user.name} logged in</p>\n          <button onClick={handleLogout}>log out</button>\n          {blogForm()}\n        </div>\n      }\n      {user === null ?\n        userForm() : null\n      }\n    </div>\n  )\n}\n\nexport default LoginToggle","import React, { useState, useEffect } from 'react'\nimport BlogAll from './components/BlogAll'\nimport blogService from './services/blogs'\nimport userService from './services/users'\nimport loginService from './services/login'\nimport Notifications from './components/Notifications'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport UserForm from './components/UserForm'\nimport LoginToggle from './components/LoginToggle'\n\nconst App = (props) => {\n  const [blogs, setBlogs] = useState(props.blogs)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n      })\n      .catch(error => {\n        alert('There has been an error fetching your blogs.', error)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addUser = (userObject) => {\n    userFormRef.current.toggleVisibility()\n    userService\n      .create(userObject)\n      .then(returnedUser => {\n        console.log('returnedUser:', returnedUser)\n        setUser(returnedUser)\n\n        messageWith('User created!')\n        console.log('User created!')\n        setTimeout(() => {\n          messageWith(null)\n        }, 5000)\n      })\n      .catch(error => {\n        messageWith('Error, user was not created! Check all fields.', 'error')\n        console.log('error is:', error)\n        setTimeout(() => {\n          messageWith(null)\n        }, 5000)\n      })\n  }\n\n  // _______________________ //\n  // Add removeUser function //\n  // _______________________ //\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        console.log(returnedBlog)\n\n        messageWith('Blog added!')\n        console.log('Blog added!')\n        setTimeout(() => {\n          messageWith(null)\n        }, 5000)\n      })\n      .catch(error => {\n        messageWith('Error, your blog was not added! Check all fields.', 'error')\n        console.log('Error, your blog was not added! Check all fields. Error:', error)\n        setTimeout(() => {\n          messageWith(null)\n        }, 5000)\n      })\n  }\n\n  const removeBlog = (id) => {\n    const deleteBlog = blogs.find(b => b.id === id)\n    if (window.confirm(`Delete ${deleteBlog.title}`)) {\n      blogService.remove(id)\n        .then(response => {\n          setBlogs(blogs.filter(p => p.id !== id))\n          messageWith(`Deleted ${deleteBlog.title}`)\n          console.log('Blog removed!')\n          setTimeout(() => {\n            messageWith(null)\n          }, 5000)\n        })\n        .catch(() => {\n          messageWith(`${deleteBlog.title} was NOT removed!`, 'error')\n          console.log(`${deleteBlog.title} was NOT removed!`)\n          setTimeout(() => {\n            messageWith(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const addVote = (id) => {\n    const blog = blogs.find((n) => n.id === id)\n    const changedBlog = { ...blog, votes: blog.votes + 1 }\n\n    blogService\n      .update(id, changedBlog)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n      })\n      .catch(error => {\n        alert('Voting error!')\n        console.log(error, 'Voting error!')\n      })\n  }\n\n  const messageWith = (message, type='success') => {\n    setMessage({ message, type })\n    setTimeout(() => {\n      setMessage(null)\n    }, 6000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      messageWith('login successful!')\n      console.log('Login successful!')\n    }\n    catch (exception) {\n      messageWith('Incorrect login!', 'error')\n      console.log('Incorrect login!')\n    }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const userFormRef = React.createRef()\n\n  const userForm = () => (\n    // <Togglable buttonLabel='create user'>\n    <Togglable buttonLabel='create user' ref={userFormRef}>\n      <UserForm createUser={addUser} />\n    </Togglable>\n  )\n\n  const blogFormRef = React.createRef()\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.clear()\n      messageWith('You have been logged out!')\n      console.log('You have been logged out!')\n      window.location.reload(false)\n    }\n    catch (exception) {\n      messageWith('Logout failed!', 'error')\n      console.log('Logout failed!')\n      setTimeout(() => {\n        messageWith(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"mainBody\">\n      <h1>Blog Logger</h1>\n      <p>Enter new found blogs that peak your interest and let others vote on them!</p>\n\n      <Notifications message={message} />\n\n      <LoginToggle\n        userForm={userForm}\n        user={user}\n        loginForm={loginForm}\n        handleLogout={handleLogout}\n        blogForm={blogForm}\n      />\n\n      <BlogAll\n        blogs={blogs}\n        id={props.id}\n        votes={props.votes}\n        addVote={addVote}\n        removeBlog={removeBlog}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nconst blogs = [\n  // {\n  //   id: 1,\n  //   author: 'Andrew Skurka',\n  //   title: 'Andrew Skurka: Hard-won insights from out there',\n  //   url: 'https://andrewskurka.com/',\n  //   votes: 7\n  // },\n  // {\n  //   id: 2,\n  //   author: 'Alan Dixon',\n  //   title: 'ULTRALIGHT BACKPACKING & HIKING',\n  //   url: 'https://www.adventurealan.com/',\n  //   votes: 5\n  // },\n  // {\n  //   id: 3,\n  //   author: 'Derek Hansen',\n  //   title: 'The Ultimate Hang',\n  //   url: 'https://theultimatehang.com/blog/',\n  //   votes: 3\n  // }\n]\n\nReactDOM.render(\n  <App blogs={blogs}/>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}